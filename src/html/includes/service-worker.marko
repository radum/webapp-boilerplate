<!-- Load the SW script and register it -->
<script>
	// Only localhost is accepted
	// https://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features
	const isLocalhost = Boolean(
		window.location.hostname === 'localhost' ||
		window.location.hostname === '[::1]' ||
		window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)
	);

	if ('serviceWorker' in navigator && (window.location.protocol === 'https:' || !isLocalhost)) {
		navigator.serviceWorker.register('/sw.js').then(function(registration) {
			console.log('ServiceWorker registration successful with scope: ', registration.scope);

			registration.onupdatefound = function() {
				if (navigator.serviceWorker.controller) {
					var installingWorker = registration.installing;

					installingWorker.onstatechange = function() {
						switch (installingWorker.state) {
							case 'installed':
								break;
							case 'redundant':
								throw new Error('The installing service worker became redundant.');
							default:
								// Ignore
						}
					};
				}
			};
		}).catch(function(e) {
			console.error('Error during service worker registration:', e);
		});

		navigator.serviceWorker.addEventListener('message', async event => {
			console.log('ready to use', event);
		});
	} else {
		console.log('service worker is not supported');
	}
</script>
